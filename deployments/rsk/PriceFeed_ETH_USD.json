{
  "address": "0x798A271E3966156515BCc947d26f736E8580A436",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_precision",
          "type": "uint8"
        }
      ],
      "name": "setPrecision",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9b24410876333a840ad51aa970b48455e69a95e301848af2ebf12a781655b4a0",
  "receipt": {
    "to": null,
    "from": "0x774289Cb40c98B4f5b64a152BF7e5F94Fee38669",
    "contractAddress": "0x798A271E3966156515BCc947d26f736E8580A436",
    "transactionIndex": 0,
    "gasUsed": "443928",
    "logsBloom": "0x
    "blockHash": "0x959861c8a0fd47f38d06dc46f611b2071c25e26d5b31797569c9df40fd6adb6a",
    "transactionHash": "0x9b24410876333a840ad51aa970b48455e69a95e301848af2ebf12a781655b4a0",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 3806055,
        "transactionHash": "0x9b24410876333a840ad51aa970b48455e69a95e301848af2ebf12a781655b4a0",
        "address": "0x798A271E3966156515BCc947d26f736E8580A436",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000774289cb40c98b4f5b64a152bf7e5f94fee38669"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x959861c8a0fd47f38d06dc46f611b2071c25e26d5b31797569c9df40fd6adb6a"
      }
    ],
    "blockNumber": 3806055,
    "cumulativeGasUsed": "443928",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x7B19bb8e6c5188eC483b784d6fB5d807a77b21bF"
  ],
  "solcInputHash": "964b643a9886544e5729090027eb9ffb",
  "metadata": "{\"compiler\":{\"version\":\"0.6.11+commit.5ef660b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_precision\",\"type\":\"uint8\"}],\"name\":\"setPrecision\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Oracle/MoneyOnChainPriceFeed.sol\":\"MoneyOnChainPriceFeed\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"},\"contracts/Oracle/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.6.11;\\n\\ninterface AggregatorV3Interface {\\n\\n  function decimals() external view returns (uint8);\\n  function description() external view returns (string memory);\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n}\",\"keccak256\":\"0xc6488af0275766b27cbbadec4770df11b2ff2c149bd3121ecf487f724d7a69cf\",\"license\":\"MIT\"},\"contracts/Oracle/IMoCBaseOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.6.11;\\r\\n\\r\\nimport \\\"./AggregatorV3Interface.sol\\\";\\r\\n\\r\\ninterface IMoCBaseOracle {\\r\\n  function peek() external view returns (bytes32, bool);\\r\\n}\\r\\n\",\"keccak256\":\"0xd5c2d6d17d6a36410ff2214303e28d77469c44ae11c3b81fc52c21c042fb3054\",\"license\":\"MIT\"},\"contracts/Oracle/IPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.6.11;\\r\\n\\r\\ninterface IPriceFeed {\\r\\n    function decimals() external view returns (uint8);\\r\\n    function price() external view returns (uint256);\\r\\n}\",\"keccak256\":\"0x2f5d486ac3cf6c61f392eb7ca773a7bb2bfc65c1be44fea4d93d73ee556d7bdf\",\"license\":\"MIT\"},\"contracts/Oracle/MoneyOnChainPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.6.11;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"./IPriceFeed.sol\\\";\\r\\nimport \\\"./IMoCBaseOracle.sol\\\";\\r\\n\\r\\ncontract MoneyOnChainPriceFeed is IPriceFeed, Ownable {\\r\\n    IMoCBaseOracle private feed;\\r\\n\\r\\n    uint8 precision = 18;\\r\\n\\r\\n    constructor(address _feedAddress) public {\\r\\n        feed = IMoCBaseOracle(_feedAddress);\\r\\n    }\\r\\n\\r\\n    function decimals() external view override returns (uint8) {\\r\\n        return precision;\\r\\n    }\\r\\n\\r\\n    function price() external view override returns (uint256) {\\r\\n        (bytes32 priceVal, bool isValid) = feed.peek();\\r\\n\\r\\n        require(isValid, \\\"Invalid price feed\\\");\\r\\n\\r\\n        return uint256(priceVal);\\r\\n    }\\r\\n\\r\\n    function setPrecision(uint8 _precision) public onlyOwner {\\r\\n        precision = _precision;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xa61128d4c1b3cce9041a847527d6260696051e527016492a887e0fbbe0da0e43\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526001805460ff60a01b1916600960a11b17905534801561002357600080fd5b506040516105ac3803806105ac8339818101604052602081101561004657600080fd5b5051600061005b6001600160e01b036100ca16565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180546001600160a01b0319166001600160a01b03929092169190911790556100ce565b3390565b6104cf806100dd6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063313ce56714610067578063715018a6146100855780637b26adac1461008f5780638da5cb5b146100af578063a035b1fe146100d3578063f2fde38b146100ed575b600080fd5b61006f610113565b6040805160ff9092168252519081900360200190f35b61008d610123565b005b61008d600480360360208110156100a557600080fd5b503560ff166101e1565b6100b7610275565b604080516001600160a01b039092168252519081900360200190f35b6100db610284565b60408051918252519081900360200190f35b61008d6004803603602081101561010357600080fd5b50356001600160a01b031661035b565b600154600160a01b900460ff1690565b61012b61046f565b6001600160a01b031661013c610275565b6001600160a01b031614610197576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6101e961046f565b6001600160a01b03166101fa610275565b6001600160a01b031614610255576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001805460ff909216600160a01b0260ff60a01b19909216919091179055565b6000546001600160a01b031690565b6000806000600160009054906101000a90046001600160a01b03166001600160a01b03166359e02dd76040518163ffffffff1660e01b8152600401604080518083038186803b1580156102d657600080fd5b505afa1580156102ea573d6000803e3d6000fd5b505050506040513d604081101561030057600080fd5b508051602090910151909250905080610355576040805162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c1c9a58d9481999595960721b604482015290519081900360640190fd5b50905090565b61036361046f565b6001600160a01b0316610374610275565b6001600160a01b0316146103cf576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166104145760405162461bcd60e51b81526004018080602001828103825260268152602001806104746026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220d5367338696642618fba762b7eb2be182802a7174a95a9303da9e52c0395e5ab64736f6c634300060b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c8063313ce56714610067578063715018a6146100855780637b26adac1461008f5780638da5cb5b146100af578063a035b1fe146100d3578063f2fde38b146100ed575b600080fd5b61006f610113565b6040805160ff9092168252519081900360200190f35b61008d610123565b005b61008d600480360360208110156100a557600080fd5b503560ff166101e1565b6100b7610275565b604080516001600160a01b039092168252519081900360200190f35b6100db610284565b60408051918252519081900360200190f35b61008d6004803603602081101561010357600080fd5b50356001600160a01b031661035b565b600154600160a01b900460ff1690565b61012b61046f565b6001600160a01b031661013c610275565b6001600160a01b031614610197576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6101e961046f565b6001600160a01b03166101fa610275565b6001600160a01b031614610255576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001805460ff909216600160a01b0260ff60a01b19909216919091179055565b6000546001600160a01b031690565b6000806000600160009054906101000a90046001600160a01b03166001600160a01b03166359e02dd76040518163ffffffff1660e01b8152600401604080518083038186803b1580156102d657600080fd5b505afa1580156102ea573d6000803e3d6000fd5b505050506040513d604081101561030057600080fd5b508051602090910151909250905080610355576040805162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c1c9a58d9481999595960721b604482015290519081900360640190fd5b50905090565b61036361046f565b6001600160a01b0316610374610275565b6001600160a01b0316146103cf576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166104145760405162461bcd60e51b81526004018080602001828103825260268152602001806104746026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220d5367338696642618fba762b7eb2be182802a7174a95a9303da9e52c0395e5ab64736f6c634300060b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1569,
        "contract": "contracts/Oracle/MoneyOnChainPriceFeed.sol:MoneyOnChainPriceFeed",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 9441,
        "contract": "contracts/Oracle/MoneyOnChainPriceFeed.sol:MoneyOnChainPriceFeed",
        "label": "feed",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IMoCBaseOracle)9404"
      },
      {
        "astId": 9444,
        "contract": "contracts/Oracle/MoneyOnChainPriceFeed.sol:MoneyOnChainPriceFeed",
        "label": "precision",
        "offset": 20,
        "slot": "1",
        "type": "t_uint8"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IMoCBaseOracle)9404": {
        "encoding": "inplace",
        "label": "contract IMoCBaseOracle",
        "numberOfBytes": "20"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}