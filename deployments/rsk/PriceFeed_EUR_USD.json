{
  "address": "0xc53475A105Bb6A03DCb76Bea898B46379593BAe2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_updater",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "PriceChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldUpdater",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newUpdater",
          "type": "address"
        }
      ],
      "name": "UpdaterChanged",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newUpdater",
          "type": "address"
        }
      ],
      "name": "setUpdater",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x0fd1cfcb7789b3d9469bae47c2af7d245ea956586a252f30f035aa3829c534f7",
  "receipt": {
    "to": null,
    "from": "0x774289Cb40c98B4f5b64a152BF7e5F94Fee38669",
    "contractAddress": "0xc53475A105Bb6A03DCb76Bea898B46379593BAe2",
    "transactionIndex": 0,
    "gasUsed": "466053",
    "logsBloom": "0x
    "blockHash": "0x2bfb90311fdd77b7a37aafed3653d1c0c12fa0b0d3b1d8cf8636e644d0fbbdb4",
    "transactionHash": "0x0fd1cfcb7789b3d9469bae47c2af7d245ea956586a252f30f035aa3829c534f7",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 3806053,
        "transactionHash": "0x0fd1cfcb7789b3d9469bae47c2af7d245ea956586a252f30f035aa3829c534f7",
        "address": "0xc53475A105Bb6A03DCb76Bea898B46379593BAe2",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000774289cb40c98b4f5b64a152bf7e5f94fee38669"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x2bfb90311fdd77b7a37aafed3653d1c0c12fa0b0d3b1d8cf8636e644d0fbbdb4"
      }
    ],
    "blockNumber": 3806053,
    "cumulativeGasUsed": "466053",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9C385013670F34256450ABA0ba7bd1B36eF02326"
  ],
  "solcInputHash": "964b643a9886544e5729090027eb9ffb",
  "metadata": "{\"compiler\":{\"version\":\"0.6.11+commit.5ef660b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_updater\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"PriceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldUpdater\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newUpdater\",\"type\":\"address\"}],\"name\":\"UpdaterChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newUpdater\",\"type\":\"address\"}],\"name\":\"setUpdater\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Oracle/FiatToFiatPseudoOracleFeed.sol\":\"FiatToFiatPseudoOracleFeed\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"},\"contracts/Oracle/FiatToFiatPseudoOracleFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.6.11;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"./IPriceFeed.sol\\\";\\r\\n\\r\\n// We need feeds with fiats prices. For now on RSK chain there are no such feeds.\\r\\n// We populate our own feeds\\r\\ncontract FiatToFiatPseudoOracleFeed is IPriceFeed, Ownable {\\r\\n    \\r\\n    uint8 constant DECIMALS = 12;\\r\\n    uint256 recentPrice = 1e12;\\r\\n\\r\\n    address updater;\\r\\n\\r\\n    constructor(address _updater) public {\\r\\n        updater = _updater;\\r\\n    }\\r\\n\\r\\n    function decimals() external view override returns (uint8) {\\r\\n        return DECIMALS;\\r\\n    }\\r\\n\\r\\n    function price() external view override returns (uint256) {\\r\\n        return recentPrice;\\r\\n    }\\r\\n\\r\\n    function setUpdater(address newUpdater) public onlyOwner {\\r\\n        address oldUpdater = updater;\\r\\n        updater = newUpdater;\\r\\n        emit UpdaterChanged(oldUpdater, updater);\\r\\n    }\\r\\n\\r\\n    function setPrice(uint256 _price) public onlyUpdater {\\r\\n        recentPrice = _price;\\r\\n        emit PriceChanged(_price);\\r\\n    }\\r\\n\\r\\n    modifier onlyUpdater()\\r\\n    {\\r\\n        require(msg.sender == updater, \\\"You're not updater\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    event UpdaterChanged(address indexed oldUpdater, address indexed newUpdater);\\r\\n    event PriceChanged(uint256 indexed newPrice);\\r\\n}\",\"keccak256\":\"0xade2ec933e96fcc5c40ed622f1f8f36e94e8ea763fb1e3f2fb57313f38c50d07\",\"license\":\"MIT\"},\"contracts/Oracle/IPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.6.11;\\r\\n\\r\\ninterface IPriceFeed {\\r\\n    function decimals() external view returns (uint8);\\r\\n    function price() external view returns (uint256);\\r\\n}\",\"keccak256\":\"0x2f5d486ac3cf6c61f392eb7ca773a7bb2bfc65c1be44fea4d93d73ee556d7bdf\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405264e8d4a5100060015534801561001957600080fd5b506040516105bf3803806105bf8339818101604052602081101561003c57600080fd5b505160006100516001600160e01b036100c016565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600280546001600160a01b0319166001600160a01b03929092169190911790556100c4565b3390565b6104ec806100d36000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806391b7f5ed1161005b57806391b7f5ed146100ce5780639d54f419146100eb578063a035b1fe14610111578063f2fde38b1461012b5761007d565b8063313ce56714610082578063715018a6146100a05780638da5cb5b146100aa575b600080fd5b61008a610151565b6040805160ff9092168252519081900360200190f35b6100a8610156565b005b6100b2610214565b604080516001600160a01b039092168252519081900360200190f35b6100a8600480360360208110156100e457600080fd5b5035610223565b6100a86004803603602081101561010157600080fd5b50356001600160a01b03166102aa565b610119610372565b60408051918252519081900360200190f35b6100a86004803603602081101561014157600080fd5b50356001600160a01b0316610378565b600c90565b61015e61048c565b6001600160a01b031661016f610214565b6001600160a01b0316146101ca576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6002546001600160a01b03163314610277576040805162461bcd60e51b81526020600482015260126024820152712cb7ba93b932903737ba103ab83230ba32b960711b604482015290519081900360640190fd5b600181905560405181907fa6dc15bdb68da224c66db4b3838d9a2b205138e8cff6774e57d0af91e196d62290600090a250565b6102b261048c565b6001600160a01b03166102c3610214565b6001600160a01b03161461031e576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600280546001600160a01b038381166001600160a01b03198316179283905560405191811692169082907f662a4a4a892f5f13cf7ee050fdaa045f8641601fdbc843e8a71f418099cacd4e90600090a35050565b60015490565b61038061048c565b6001600160a01b0316610391610214565b6001600160a01b0316146103ec576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166104315760405162461bcd60e51b81526004018080602001828103825260268152602001806104916026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a264697066735822122075a14d443767b1b555db673f9534b2cf8dacfbacc222f38227a7e9c0f376e0f664736f6c634300060b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c806391b7f5ed1161005b57806391b7f5ed146100ce5780639d54f419146100eb578063a035b1fe14610111578063f2fde38b1461012b5761007d565b8063313ce56714610082578063715018a6146100a05780638da5cb5b146100aa575b600080fd5b61008a610151565b6040805160ff9092168252519081900360200190f35b6100a8610156565b005b6100b2610214565b604080516001600160a01b039092168252519081900360200190f35b6100a8600480360360208110156100e457600080fd5b5035610223565b6100a86004803603602081101561010157600080fd5b50356001600160a01b03166102aa565b610119610372565b60408051918252519081900360200190f35b6100a86004803603602081101561014157600080fd5b50356001600160a01b0316610378565b600c90565b61015e61048c565b6001600160a01b031661016f610214565b6001600160a01b0316146101ca576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6002546001600160a01b03163314610277576040805162461bcd60e51b81526020600482015260126024820152712cb7ba93b932903737ba103ab83230ba32b960711b604482015290519081900360640190fd5b600181905560405181907fa6dc15bdb68da224c66db4b3838d9a2b205138e8cff6774e57d0af91e196d62290600090a250565b6102b261048c565b6001600160a01b03166102c3610214565b6001600160a01b03161461031e576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600280546001600160a01b038381166001600160a01b03198316179283905560405191811692169082907f662a4a4a892f5f13cf7ee050fdaa045f8641601fdbc843e8a71f418099cacd4e90600090a35050565b60015490565b61038061048c565b6001600160a01b0316610391610214565b6001600160a01b0316146103ec576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166104315760405162461bcd60e51b81526004018080602001828103825260268152602001806104916026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a264697066735822122075a14d443767b1b555db673f9534b2cf8dacfbacc222f38227a7e9c0f376e0f664736f6c634300060b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1569,
        "contract": "contracts/Oracle/FiatToFiatPseudoOracleFeed.sol:FiatToFiatPseudoOracleFeed",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 9278,
        "contract": "contracts/Oracle/FiatToFiatPseudoOracleFeed.sol:FiatToFiatPseudoOracleFeed",
        "label": "recentPrice",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 9280,
        "contract": "contracts/Oracle/FiatToFiatPseudoOracleFeed.sol:FiatToFiatPseudoOracleFeed",
        "label": "updater",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}